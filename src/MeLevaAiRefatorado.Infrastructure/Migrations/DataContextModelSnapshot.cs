// <auto-generated />
using System;
using MeLevaAiRefatorado.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MeLevaAiRefatorado.Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("MeLevaAiRefatorado.Domain.Models.CarteiraDeHabilitacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Categoria")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CarteiraDeHabilitacaos");
                });

            modelBuilder.Entity("MeLevaAiRefatorado.Domain.Models.Corrida", b =>
                {
                    b.Property<Guid>("CorridaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("MotoristaId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PassageiroId")
                        .HasColumnType("TEXT");

                    b.Property<double>("PontoFinalX")
                        .HasColumnType("REAL");

                    b.Property<double>("PontoFinalY")
                        .HasColumnType("REAL");

                    b.Property<double>("PontoInicialX")
                        .HasColumnType("REAL");

                    b.Property<double>("PontoInicialY")
                        .HasColumnType("REAL");

                    b.Property<int>("StatusCorrida")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TempoEstimadoChegada")
                        .HasColumnType("INTEGER");

                    b.Property<double>("TempoEstimadoDestino")
                        .HasColumnType("REAL");

                    b.Property<double>("ValorEstimado")
                        .HasColumnType("REAL");

                    b.Property<Guid>("VeiculoId")
                        .HasColumnType("TEXT");

                    b.HasKey("CorridaId");

                    b.HasIndex("MotoristaId");

                    b.HasIndex("PassageiroId");

                    b.ToTable("Corridas");
                });

            modelBuilder.Entity("MeLevaAiRefatorado.Domain.Models.Motorista", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CarteiraDeHabilitacaoId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmCorrida")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Motoristas");
                });

            modelBuilder.Entity("MeLevaAiRefatorado.Domain.Models.Passageiro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmCorrida")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Passageiros");
                });

            modelBuilder.Entity("MeLevaAiRefatorado.Domain.Models.Veiculo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Ano")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Categoria")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("FotoUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("MotoristaId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("QuantidadeDeLugares")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Veiculos");
                });

            modelBuilder.Entity("MeLevaAiRefatorado.Domain.Models.Corrida", b =>
                {
                    b.HasOne("MeLevaAiRefatorado.Domain.Models.Motorista", null)
                        .WithMany("Corridas")
                        .HasForeignKey("MotoristaId");

                    b.HasOne("MeLevaAiRefatorado.Domain.Models.Passageiro", null)
                        .WithMany("Corridas")
                        .HasForeignKey("PassageiroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MeLevaAiRefatorado.Domain.Models.Motorista", b =>
                {
                    b.Navigation("Corridas");
                });

            modelBuilder.Entity("MeLevaAiRefatorado.Domain.Models.Passageiro", b =>
                {
                    b.Navigation("Corridas");
                });
#pragma warning restore 612, 618
        }
    }
}
